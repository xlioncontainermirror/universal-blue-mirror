---
  name: Mirror to Docker Hub
  on:
    pull_request:
      branches:
        - main
    schedule:
      - cron: '05 10 * * 1,3,5'  # 10:05am UTC Mon, Wed, Fri
    push:
      branches:
        - main
      paths-ignore:
        - '**/README.md'
    workflow_dispatch:
  
  env:
    IMAGE_DESC: "Unofficial mirror of Universal Blue, mirror to Docker Hub."
    #IMAGE_REGISTRY: "registry.hub.docker.com/${{ github.repository_owner }}"
    IMAGE_REGISTRY: "docker.io/${{ github.repository_owner }}"

  concurrency:
    group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.brand_name}}-${{ inputs.stream_name }}
    cancel-in-progress: true

  jobs:
    generate_list:
      name: Genarate list for work
      runs-on: ubuntu-24.04-arm
      outputs:
        matrix: ${{ steps.generate.outputs.matrix }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4.2.2
  
        - name: Genarate list
          id: generate
          shell: bash
          run: |
            MATRIX_IMAGES=$(ls matrixs -1 | jq -R . | jq -s .)
            echo "Generated matrix list: $MATRIX_IMAGES"
            echo "matrix<<MATRIX_END" >> $GITHUB_OUTPUT
            echo "$MATRIX_IMAGES" >> $GITHUB_OUTPUT
            echo "MATRIX_END" >> $GITHUB_OUTPUT
            
        - name: Debug output
          run: |
            echo "Output matrix: ${{ steps.generate.outputs.matrix }}"
  
    download_push:
      name: Work
      needs: generate_list
      runs-on: ubuntu-24.04-arm

      permissions:
        id-token: write
        packages: write
        contents: read
        attestations: write
  
      strategy:
        matrix:
          image: ${{ fromJson(needs.generate_list.outputs.matrix) }}
        fail-fast: false
      
      steps:
        - name: Checkout Push to Registry action
          uses: actions/checkout@v4.2.2
  
        - name: Install Podman, buildah
          uses: awalsh128/cache-apt-pkgs-action@v1.4.3
          with:
            packages: podman, buildah

        - uses: sigstore/cosign-installer@v3.7.0
  
        - name: Verify ${{ matrix.image }}
          shell: bash
          run: |
            set -oue pipefail
            echo "---Grep image name---"
            containerfile_path="matrixs/${{ matrix.image }}/Containerfile"
            image=$(grep -i '^FROM' "$containerfile_path" | awk '{print $2}')
            echo "Image: "${image}""
            echo ""
            echo "Using Cosign to verify image..."
            cosign verify \
              --key https://raw.githubusercontent.com/ublue-os/bluefin/refs/heads/main/cosign.pub \
              "${image}"
  
        - name: Maximize build space
          if: contains( matrix.image , 'bazzite')
          continue-on-error: true
          uses: ublue-os/remove-unwanted-software@v8
  
        - name: Image Metadata
          uses: docker/metadata-action@v5.6.1
          id: meta
          with:
            images: |
              ${{ matrix.image }}
            tags: |
              type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
              type=raw,value=latest,enable={{is_default_branch}}
              type=ref,event=pr
            labels: |
              io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
              org.opencontainers.image.description=${{ env.IMAGE_DESC }}
              org.opencontainers.image.title=${{ matrix.image }}
  
        - name: Download Image
          id: build_image
          uses: redhat-actions/buildah-build@v2.13
          with:
            containerfiles: |
              matrixs/${{ matrix.image }}/Containerfile
            image: ${{ matrix.image }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            arch: amd64
            oci: true

        - name: Login to Docker Hub
          uses: docker/login-action@v3.3.0
          with:
            username: ${{ github.repository_owner }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Push Image to Docker Hub
          uses: redhat-actions/push-to-registry@v2.8
          id: push
          env:
            REGISTRY_USER: ${{ github.repository_owner }}
            REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          with:
            image: ${{ steps.build_image.outputs.image }}
            tags: ${{ steps.build_image.outputs.tags }}
            registry: ${{ env.IMAGE_REGISTRY }}
            username: ${{ env.REGISTRY_USER }}
            password: ${{ env.REGISTRY_PASSWORD }}
            extra-args: |
              --compression-format=zstd
  
        - name: Sign container image
          if: github.event_name != 'pull_request'
          run: |
            cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ steps.build_image.outputs.image }}@${TAGS} --registry-username='${{ github.repository_owner }}' --registry-password='${{ secrets.DOCKER_PASSWORD }}'
          env:
            TAGS: ${{ steps.push.outputs.digest }}
            COSIGN_EXPERIMENTAL: false
            COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
        
        - name: Attest
          if: github.event_name != 'pull_request'
          uses: actions/attest-build-provenance@v2.2.0
          with:
            subject-name: docker.io/${{ github.repository_owner }}/${{ matrix.image }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true
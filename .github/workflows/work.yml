---
  name: Mirror to Docker Hub
  on:
    pull_request:
      branches:
        - main
    schedule:
      - cron: '05 10 * * 1,3,5'  # 10:05am UTC Mon, Wed, Fri
    push:
      branches:
        - main
      paths-ignore:
        - '**/README.md'
    workflow_dispatch:
  
  env:
    IMAGE_DESC: "Unofficial mirror of Universal Blue, mirror to Docker Hub."
    #IMAGE_REGISTRY: "registry.hub.docker.com/${{ github.repository_owner }}"
    IMAGE_REGISTRY: "docker.io/${{ github.repository_owner }}"

  concurrency:
    group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.brand_name }}-${{ inputs.stream_name }}
    cancel-in-progress: true

  permissions:
    contents: read

  jobs:
    generate_list:
      name: Genarate list for work
      runs-on: ubuntu-24.04-arm
      outputs:
        matrix: ${{ steps.generate.outputs.matrix }}
      steps:
        - name: Checkout
          uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
          with: 
            persist-credentials: false
  
        - name: If PR, only keep 2 for test
          if: github.event_name == 'pull_request'
          run: |
            find matrixs -mindepth 1 ! -name "bluefin-stable" ! -name "aurora-stable" ! -name "Containerfile" -exec rm -rf {} +

        - name: Genarate list
          id: generate
          shell: bash
          run: |
            MATRIX_IMAGES=$(ls matrixs -1 | jq -R . | jq -s .)
            echo "Generated matrix list: $MATRIX_IMAGES"
            echo "matrix<<MATRIX_END" >> $GITHUB_OUTPUT
            echo "$MATRIX_IMAGES" >> $GITHUB_OUTPUT
            echo "MATRIX_END" >> $GITHUB_OUTPUT
            
        - name: Debug output
          env:
            GENERATED_OUTPUT: ${{ steps.generate.outputs.matrix }}
          run: |
            echo "Output matrix: ${GENERATED_OUTPUT}"
  
    download_push:
      name: Work
      needs: generate_list
      runs-on: ubuntu-24.04-arm

      permissions:
        id-token: write
        packages: write
        attestations: write
  
      strategy:
        matrix:
          image: ${{ fromJson(needs.generate_list.outputs.matrix) }}
        fail-fast: false
      
      steps:
        - name: Checkout Push to Registry action
          uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
          with:
            persist-credentials: false
  
        - uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0
  
        - name: Verify ${{ matrix.image }}
          shell: bash
          run: |
            set -oue pipefail
            echo "---Grep image name---"
            containerfile_path="matrixs/${{ matrix.image }}/Containerfile"
            image=$(grep -i '^FROM' "$containerfile_path" | awk '{print $2}')
            echo "Image: "${image}""
            echo ""
            echo "Using Cosign to verify image..."
            cosign verify \
              --key https://raw.githubusercontent.com/ublue-os/bluefin/refs/heads/main/cosign.pub \
              "${image}"
  
        - name: Maximize build space
          if: contains( matrix.image , 'bazzite')
          continue-on-error: true
          uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
  
        - name: Image Metadata
          uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
          id: meta
          with:
            images: |
              ${{ env.IMAGE_REGISTRY }}/${{ matrix.image }}
            tags: |
              type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
              type=raw,value=latest,enable={{is_default_branch}}
              type=ref,event=pr
            labels: |
              io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
              org.opencontainers.image.description=${{ env.IMAGE_DESC }}
              org.opencontainers.image.title=${{ matrix.image }}
  
        - name: Download Image
          id: build_image
          uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
          with:
            containerfiles: |
              matrixs/${{ matrix.image }}/Containerfile
            image: ${{ matrix.image }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            arch: amd64
            oci: true

        - name: Login to Docker Hub
          uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
          with:
            username: ${{ github.repository_owner }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Push Image to Docker Hub
          uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
          id: push
          env:
            REGISTRY_USER: ${{ github.repository_owner }}
            REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          with:
            tags: ${{ steps.build_image.outputs.tags }}
            username: ${{ env.REGISTRY_USER }}
            password: ${{ env.REGISTRY_PASSWORD }}
            extra-args: |
              --compression-format=zstd
  
        - name: Sign container image
          if: github.event_name != 'pull_request'
          run: |
            cosign sign -y --key env://COSIGN_PRIVATE_KEY ${IMAGE_REGISTRY}/${IMAGE_DIGEST}@${TAGS} --registry-username=${REGISTRY_USERNAME} --registry-password=${REGISTRY_PASSWORD}
          env:
            TAGS: ${{ steps.push.outputs.digest }}
            COSIGN_EXPERIMENTAL: false
            COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
            IMAGE_REGISTRY: ${{ env.IMAGE_REGISTRY }}
            IMAGE_DIGEST: ${{ steps.build_image.outputs.image }}
            REGISTRY_USERNAME: ${{ github.repository_owner }}
            REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Attest
          if: github.event_name != 'pull_request'
          uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
          with:
            subject-name: docker.io/${{ github.repository_owner }}/${{ matrix.image }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true
